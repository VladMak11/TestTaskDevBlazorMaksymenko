@page "/property/create"
@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;

@inject IUnitOfWork _unitOfWork
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider

<div class="row my-2 card col-10">
    <h3 class="card-title text-primary mb-3 ">Create Property</h3>
    <div class="col-12">
        <EditForm Model="property" OnValidSubmit="UpsertProperty">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Name</label>
                <InputText @bind-Value="property.Name" class="form-control"></InputText>
                <ValidationMessage For="()=>property.Name"></ValidationMessage>
            </div>
            <br />
            <div class="form-group">
                <label>Type</label>
                <InputText @bind-Value="property.Type" class="form-control"></InputText>
                <ValidationMessage For="()=>property.Type"></ValidationMessage>
            </div>
            <br />
            <div class="form-group">
                <label>Purchase DateTime</label>
                <InputDate Type="InputDateType.DateTimeLocal" min="@DateTime.Today.ToString("f")" @bind-Value="property.PurchaseDateTime" class="form-control"></InputDate>
                <ValidationMessage For="()=>property.PurchaseDateTime"></ValidationMessage>
            </div>
            <br />
            <div class="form-group">
                <label>Initial Value</label>
                <InputNumber TValue="Decimal" @bind-Value="property.InitialValue" class="form-control" min="0"></InputNumber>
                <ValidationMessage For="()=>property.InitialValue"></ValidationMessage>
            </div>
            <br />
            <div class="form-group">
                <label>Depreciation Period </label>
                <InputSelect @bind-Value="property.DepreciationPeriod" class="form-control">
                    <option value="0" selected>--Select Period--</option>
                    @foreach (var item in DepreciationPeriods)
                    {
                        <option value="@item">@item</option>
                    }
                </InputSelect>
                <ValidationMessage For="()=>property.DepreciationPeriod"></ValidationMessage>
            </div>
            <br />
            <div class="form-group mb-2">
                <label>Depreciation Value</label>
                <InputNumber TValue="Decimal" @bind-Value="property.DepreciationValue" class="form-control"></InputNumber>
                <ValidationMessage For="()=>property.DepreciationValue"></ValidationMessage>
            </div>
            <div class="form-group mb-2">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="property" class="btn btn-secondary">Back to List</NavLink>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Property property { get; set; } = new Property() { PurchaseDateTime = DateTime.Now };
    List<string> DepreciationPeriods = new() { "day", "week", "mounth", "year" };
    private string Title { get; set; } = "Create";

    private async void UpsertProperty()
    {
        var authenticationState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        property.ApplicationUserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        
        await _unitOfWork.Properties.AddAsync(property);
        await _unitOfWork.SaveAsync();

        _navigationManager.NavigateTo("property");
    }
}
