@page "/user"
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@using System.Security.Claims;
@using AutoMapper;


@inject UserManager<ApplicationUser> _userManager
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IJSRuntime _jsRuntime
@inject IMapper _iMapper

<_DeleteConfirmation ConfirmationChanged="ConfirmDeleteClickAsync"></_DeleteConfirmation>

<div class="container mt-4">
    <div class="row">
        <div class="col-6 d-flex justify-content-end">
            <h4 class="card-title text-black">Users List</h4>
        </div>
        <div class="col-6 d-flex justify-content-end mb-2">
            <a href="user/create" class="btn btn-dark">
                <i class="bi bi-patch-plus"></i>
                <span class="ms-2">Add New User</span>
            </a>
        </div>
    </div>
    @if (users.Any())
    {
        <div class="table-responsive bg-white">
            <table class="table table-bordered mt-4 table-hover">
                <thead class="bg-dark">
                    <tr class="text-light">
                        <th>Name</th>
                        <th>Email</th>
                        <th>Address</th>
                        <th>Phone Number</th>
                        <th>Initial Property Value Sum</th>
                        <th>Current Property Value Sum</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in users)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Email</td>
                            <td>@item.Address</td>
                            <td>@item.PhoneNumber</td>
                            <td>@item.InitialPropertyValueSum</td>
                            <td>@item.CurrentPropertyValueSum</td>
                            <td>
                                <NavLink href="@($"user/edit/{item.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i></NavLink>
                                <button class="btn btn-danger" @onclick="async () => await HandleDelete(item.Id)"><i class="bi bi-trash-fill"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>No users found.</p>
    }
</div>



@code {
    private IEnumerable<UserVM> users { get; set; } = new List<UserVM>();
    private string? DeleteUserId { get; set; } = null;
    protected override async Task OnInitializedAsync()
    {
        await LoadUsersAsync();
    }

    private async Task LoadUsersAsync()
    {
        var usersAll = await _userManager.Users.ToListAsync();
        users = usersAll.Select(p => _iMapper.Map<UserVM>(p));
    }
    private async Task HandleDelete(string id)
    {
        DeleteUserId = id; 
        await _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    private async Task ConfirmDeleteClickAsync(bool isConfirmed)
    {
        if (isConfirmed && DeleteUserId != null)
        {
            var existingUser = await _userManager.FindByIdAsync(DeleteUserId);
            await _userManager.DeleteAsync(existingUser);
            await LoadUsersAsync();
            await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        }
    }
}

